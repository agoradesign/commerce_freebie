<?php

use Drupal\Core\Datetime\DrupalDateTime;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\datetime\Plugin\Field\FieldType\DateTimeItemInterface;

/**
 * Add start and end date fields to the freebie entity.
 */
function commerce_freebie_update_9100() {
  $start_date_field = BaseFieldDefinition::create('datetime')
    ->setLabel(t('Start date'))
    ->setRequired(TRUE)
    ->setSetting('datetime_type', 'datetime')
    ->setDefaultValueCallback('Drupal\commerce_freebie\Entity\Freebie::getDefaultStartDate')
    ->setDisplayOptions('form', [
      'type' => 'commerce_store_datetime',
      'weight' => 5,
    ])
    ->setDisplayConfigurable('form', TRUE);

  $end_date_field = BaseFieldDefinition::create('datetime')
    ->setLabel(t('End date'))
    ->setRequired(FALSE)
    ->setSetting('datetime_type', 'datetime')
    ->setSetting('datetime_optional_label', t('Provide an end date'))
    ->setDisplayOptions('form', [
      'type' => 'commerce_store_datetime',
      'weight' => 6,
    ])
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('start_date', 'commerce_freebie', 'commerce_freebie', $start_date_field);
  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('end_date', 'commerce_freebie', 'commerce_freebie', $end_date_field);

  $freebie_storage = \Drupal::entityTypeManager()->getStorage('commerce_freebie');
  /** @var \Drupal\commerce_freebie\Entity\FreebieInterface $freebie */
  foreach ($freebie_storage->loadMultiple() as $freebie) {
    $start_date = DrupalDateTime::createFromTimestamp($freebie->getCreatedTime())->format(DateTimeItemInterface::DATETIME_STORAGE_FORMAT);
    $freebie->set('start_date', $start_date);
    $freebie->save();
  }
}
